type StatusCode = {
  statusCodeName: string;
  statusCodeDetails: string;
};

const statusCodes: Record<number, StatusCode> = {
  0: {
    statusCodeName: "other",
    statusCodeDetails: "The operation is not started or completed or this object is not applicable for the probe type."
  },
  1: {
    statusCodeName: "ok",
    statusCodeDetails: "A valid completion occurred and timed successfully."
  },
  2: {
    statusCodeName: "disconnected",
    statusCodeDetails: "The operation did not occur because the connection to the target was lost."
  },
  3: {
    statusCodeName: "overThreshold",
    statusCodeDetails: "A valid completion was received but the completion time exceeded a threshold value."
  },
  4: {
    statusCodeName: "timeout",
    statusCodeDetails: "An operation timed out; no completion time recorded."
  },
  5: {
    statusCodeName: "busy",
    statusCodeDetails: "The operation did not occur because a previous operation is still outstanding."
  },
  6: {
    statusCodeName: "notConnected",
    statusCodeDetails: "The operation did not occur because no connection (session) exists with the target."
  },
  7: {
    statusCodeName: "dropped",
    statusCodeDetails: "The operation did not occur due to lack of internal resource."
  },
  8: {
    statusCodeName: "sequenceError",
    statusCodeDetails: "A completed operation did not contain the correct sequence id; no completion time recorded."
  },
  9: {
    statusCodeName: "verifyError",
    statusCodeDetails: "A completed operation was received, but the data it contained did not match the expected data; no completion time recorded."
  },
  10: {
    statusCodeName: "applicationSpecific",
    statusCodeDetails: "The application generating the operation had a specific error."
  },
  11: {
    statusCodeName: "dnsServerTimeout",
    statusCodeDetails: "DNS Server Timeout."
  },
  12: {
    statusCodeName: "tcpConnectTimeout",
    statusCodeDetails: "TCP Connect Timeout."
  },
  13: {
    statusCodeName: "httpTransactionTimeout",
    statusCodeDetails: "HTTP Transaction Timeout."
  },
  14: {
    statusCodeName: "dnsQueryError",
    statusCodeDetails: "DNS Query error (because of unknown address etc.)."
  },
  15: {
    statusCodeName: "httpError",
    statusCodeDetails: "HTTP Response StatusCode is not OK (200) then HTTP error is set."
  },
  16: {
    statusCodeName: "error",
    statusCodeDetails: "If there are socket failures or some other errors not relevant to the actual probe, they are recorded under this error."
  }
};

// Example usage:
const getStatusCode = (code: number): StatusCode => {
  return statusCodes[code] || {
    statusCodeName: "unknown",
    statusCodeDetails: "Unknown status code."
  };
};

// Test
const testCode = 1;
const result = getStatusCode(testCode);
console.log(result.statusCodeName);  // "ok"
console.log(result.statusCodeDetails);  // "A valid completion occurred and timed successfully."
